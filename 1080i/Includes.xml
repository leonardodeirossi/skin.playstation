<includes>

	<include file="Defaults.xml" />
	<include file="Include_Home_OSMC.xml" />
	<include file="Includes_Widgets.xml" />
	<include condition="System.HasAddon(script.skinshortcuts)" file="script-skinshortcuts-includes.xml" />
	<include condition="!System.HasAddon(script.skinshortcuts)" file="script-skinshortcuts-static.xml" />
	<include file="Include_DialogSettings.xml" />
	<include file="Viewtype50.xml" />
	<include file="Viewtype51.xml" />
	<include file="Viewtype52.xml" />
	<include file="Viewtype53.xml" />
	<include file="Viewtype54.xml" />
	<include file="Viewtype55.xml" />
	<include file="Variables.xml" />
	
<include name="FavItems">

 <item id="41">
				<onclick>dialog.close(5606)</onclick>
				<icon>$INFO[Window(0).Property(favourite.1.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.1.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.1.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.1.name))</visible>
						</item>
						<item id="51">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.2.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.2.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.2.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.2.name))</visible>
						</item>
						<item id="61">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.3.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.3.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.3.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.3.name))</visible>
						</item>
						<item id="71">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.4.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.4.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.4.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.4.name))</visible>
						</item>
						<item id="81">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.5.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.5.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.5.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.5.name))</visible>
						</item>
						<item id="91">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.6.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.6.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.6.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.6.name))</visible>
						</item>
						<item id="10">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.7.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.7.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.7.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.7.name))</visible>
						</item>
						<item id="11">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.8.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.8.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.8.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.8.name))</visible>
						</item>
						<item id="12">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.9.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.9.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.9.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.9.name))</visible>
						</item>
						<item id="13">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.10.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.10.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.10.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.10.name))</visible>
						</item>
						<item id="14">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.11.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.11.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.11.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.11.name))</visible>
						</item>
						<item id="15">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.12.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.12.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.12.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.12.name))</visible>
						</item>
						<item id="16">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.13.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.13.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.13.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.13.name))</visible>
						</item>
						<item id="17">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.14.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.14.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.14.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.14.name))</visible>
						</item>
						<item id="18">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.15.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.15.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.15.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.15.name))</visible>
						</item>
						<item id="19">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.16.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.16.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.16.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.16.name))</visible>
						</item>
						<item id="20">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.17.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.17.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.17.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.17.name))</visible>
						</item>
						<item id="21">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.18.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.18.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.18.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.18.name))</visible>
						</item>
						<item id="22">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.19.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.19.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.19.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.19.name))</visible>
						</item>
						<item id="23">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.20.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.20.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.20.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.20.name))</visible>
						</item>
						<item id="24">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.21.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.21.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.21.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.21.name))</visible>
						</item>
						<item id="25">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.22.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.22.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.22.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.22.name))</visible>
						</item>
						<item id="26">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.23.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.23.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.23.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.23.name))</visible>
						</item>
						<item id="27">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.24.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.24.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.24.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.24.name))</visible>
						</item>
						<item id="28">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.25.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.25.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.25.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.25.name))</visible>
						</item>
						<item id="29">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.26.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.26.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.26.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.26.name))</visible>
						</item>
						<item id="30">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.27.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.27.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.27.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.27.name))</visible>
						</item>
						<item id="31">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.28.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.28.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.28.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.28.name))</visible>
						</item>
						<item id="32">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.29.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.29.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.29.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.29.name))</visible>
						</item>
						<item id="33">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.30.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.30.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.30.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.30.name))</visible>
						</item>
						<item id="34">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.31.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.31.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.31.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.31.name))</visible>
						</item>
						<item id="35">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.32.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.32.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.32.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.32.name))</visible>
						</item>
						<item id="36">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.33.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.33.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.33.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.33.name))</visible>
						</item>
						<item id="37">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.34.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.34.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.34.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.34.name))</visible>
						</item>
						<item id="38">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.35.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.35.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.35.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.35.name))</visible>
						</item>
						<item id="39">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.36.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.36.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.36.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.36.name))</visible>
						</item>
						<item id="40">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.37.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.37.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.37.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.37.name))</visible>
						</item>
						<item id="41">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.38.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.38.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.38.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.38.name))</visible>
						</item>
						<item id="42">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.39.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.39.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.39.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.39.name))</visible>
						</item>
						<item id="43">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.40.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.40.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.40.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.40.name))</visible>
						</item>
						<item id="44">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.41.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.41.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.41.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.41.name))</visible>
						</item>
						<item id="45">
							<onclick>dialog.close(5606)</onclick>
							<icon>$INFO[Window(0).Property(favourite.42.Thumb)]</icon>
							<label>$INFO[Window(0).Property(favourite.42.name)]</label>
							<onclick>$INFO[Window(0).Property(favourite.42.path)])</onclick>
							<onclick>Dialog.Close(1114)</onclick>
							<visible>!String.IsEmpty(Window(0).Property(favourite.42.name))</visible>
						</item>


</include>	
	
	
<include name="bottombar">

<control type="group">
        <animation type="conditional" condition="Window.IsVisible(home) + System.Idletime(2)">
                                        <effect type="fade" start="0" end="100" time="450" tween="circle" easing="inout" />
                                           <effect type="slide" start="0,250" end="0,0" time="450" tween="circle" easing="inout" />
                                    </animation>
                                  <animation type="conditional" condition="Window.IsVisible(home) + !System.Idletime(2)">
                                        <effect type="fade" start="100" end="0" time="450" tween="circle" easing="inout" />
                                                  <effect type="slide" start="0,0" end="0,250" time="450" tween="circle" easing="inout" />
                                    </animation>
					
			<include>WindowFadeAnimation</include>
	
					<control type="image">
		<left>0</left>
			<top>1017</top>
			<width>1920</width>
			<height>63</height>
				<texture background="true">color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(color.background)]</colordiffuse>
				<visible>!Window.IsVisible(LoginScreen) + !Window.IsVisible(Home) + !Window.IsVisible(1806)</visible>
			</control>
								<control type="image">
		<left>0</left>
			<top>1017</top>
			<width>1920</width>
			<height>63</height>
				<texture background="true">color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(color.background)]</colordiffuse>
				<visible>Window.IsVisible(Home) + String.Contains(Skin.String(themedir), Flow) | String.Contains(Skin.String(themedir), Dual) + Skin.HasSetting(themes) + !Window.IsVisible(1806)</visible>
			</control>
											<control type="image">
		<left>0</left>
			<top>1017</top>
			<width>1920</width>
			<height>63</height>
					<texture>color_black.png</texture>
					<aspectratio>scale</aspectratio>
			<colordiffuse>A6FFFFFF</colordiffuse>
				<visible>Window.IsVisible(Home) + !String.Contains(Skin.String(themedir), Flow) + !String.Contains(Skin.String(themedir), Dual) | !Skin.HasSetting(themes) + !Window.IsVisible(1806)</visible>
			</control>
					<control type="image">
		<left>0</left>
			<top>1017</top>
			<width>1920</width>
			<height>63</height>
				<texture background="true">color_white.png</texture>
				<colordiffuse>FF001D66</colordiffuse>
				<visible>Window.IsVisible(LoginScreen)</visible>
			</control>
			
		<control type="image">

			<left>0</left>
			<top>1015</top>
			<width>1920</width>
			<height>2</height>
			<texture>color_white.png</texture>
			<colordiffuse>80FFFFFF</colordiffuse>
		</control>

		<control type="image">

		      
			<left>50</left>
			<top>1030</top>
			<width>35</width>
			<height>35</height>
			<texture>button_x.png</texture>
		</control>
				<control type="label">
					<left>100</left>
					<top>1030</top>
					<width>1400</width>
					<height>33</height>
					<label>Enter</label>
					<font>Font25</font>
					<textcolor>DialogColor1</textcolor>
				</control>

		<control type="image">


			<left>250</left>
			<top>1030</top>
			<width>35</width>
			<height>35</height>
			<texture>button_o.png</texture>
		</control>

				<control type="label">
					<left>300</left>
					<top>1030</top>
					<width>1400</width>
					<height>33</height>
					<label>Back</label>
					<font>Font25</font>
					<textcolor>DialogColor1</textcolor>
				</control>

		</control>
		
</include>
	<!-- Fullscreen dimensions -->
	<include name="FullscreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>1920</width>
		<height>1080</height>
	</include>

	<!-- Window background image -->
	<include name="WindowBackgroundImage">
		<param name="isHomeWindow">False</param>
		<param name="animate">False</param>
		<definition>
			<control type="videowindow">
				<include>FullscreenDimensions</include>
				<visible>Player.HasVideo + Skin.HasSetting(BackgroundVideo)</visible>
				<visible>!$PARAM[animate]</visible>
			</control>



			<!-- Background Image -->
			<control type="image" id="10000">
				<include>FullscreenDimensions</include>
				<texture background="true" fallback="transparent.png">special://skin/extras/bg.jpg</texture>
				<fadetime>400</fadetime>
				<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
				<visible>!Skin.HasSetting(HideFanart)</visible>
				<animation effect="fade" start="0" end="100" time="200" delay="70" condition="$PARAM[animate]">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200" condition="$PARAM[animate]">WindowClose</animation>
			</control>

			<!-- Artists Slideshow -->
			<control type="multiimage">
				<include>FullscreenDimensions</include>
				<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
				<aspectratio>keep</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>2000</fadetime>
				<randomize>true</randomize>
				<visible>Player.HasAudio + System.HasAddon(script.artistslideshow) + Skin.HasSetting(EnableArtistFanart)</visible>
			</control>

			<!-- Visualisation -->
			<control type="visualisation">
				<include>FullscreenDimensions</include>
				<visible>Player.HasAudio + Skin.HasSetting(BackgroundVisualisation) + !String.Contains(Window(Videos).Property(TvTunesIsAlive),True)</visible>
			</control>

			<!-- Overlay -->
			<control type="image">
				<include>FullscreenDimensions</include>
			<texture background="true">color_white.png</texture>
			<colordiffuse>8C000000</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" condition="$PARAM[animate]">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200" delay="70" condition="$PARAM[animate]">WindowClose</animation>
				<include>VisibleFadeAnimation</include>
				<visible>!Window.Is(visualisation) | [Window.Is(visualisation) + [Player.ShowInfo | Window.IsActive(musicosd)]]</visible>
			</control>
			<control type="image">
				<include>FullscreenDimensions</include>
				<texture background="true">color_white.png</texture>
				<colordiffuse>$INFO[Skin.String(color.background)]</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" condition="$PARAM[animate]">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200" delay="70" condition="$PARAM[animate]">WindowClose</animation>
				<include>VisibleFadeAnimation</include>
				<visible>!Window.Is(visualisation) | [Window.Is(visualisation) + [Player.ShowInfo | Window.IsActive(musicosd)]]</visible>
				<visible>Skin.String(color.background) + Skin.HasSetting(BackgroundCustomColour)</visible>
			</control>
		</definition>
	</include>

	<!-- Window background image with fade animation -->
	<include name="WindowFadeBackgroundImage">
		<control type="group">
			<include content="WindowBackgroundImage">
				<param name="animate">True</param>
			</include>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>1920</width>
				<height>1080</height>
				<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
			</control>
		</control>
	</include>

	<!-- Dialog fade background image -->
	<include name="DialogFadeBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture colordiffuse="DarkenColor">dialogs/DialogTextBackground.png</texture>
			<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		</control>
	</include>

	<!-- Options background image -->
	<include name="OptionsBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture border="20">dialogs/OptionsBackground.png</texture>
		</control>
	</include>

	<!-- Time -->
	<include name="Time">
		<param name="heading">$VAR[HeadingLabel]</param>
		<definition>
			<!-- Window heading -->

				<control type="label">
		<animation type="WindowOpen" condition="Window.IsVisible(LoginScreen) + Window.IsVisible(Settings) | Window.IsVisible(SkinSettings) | Window.IsVisible(SettingsCategory) | Window.IsVisible(10016) | Window.IsVisible(10018) | Window.IsVisible(10021) | Window.IsVisible(10022) | Window.IsVisible(10030) | Window.IsVisible(10031) | Window.IsVisible(10032)">
              <effect type="fade" start="0" end="100" time="300" tween="cubic" easing="inout"/>

                    </animation>
<animation type="WindowClose" condition="Window.IsVisible(LoginScreen) + Window.IsVisible(Settings) | Window.IsVisible(SkinSettings) | Window.IsVisible(SettingsCategory) | Window.IsVisible(10016) | Window.IsVisible(10018) | Window.IsVisible(10021) | Window.IsVisible(10022) | Window.IsVisible(10030) | Window.IsVisible(10031) | Window.IsVisible(10032)">
              <effect type="fade" start="100" end="0" time="300" tween="cubic" easing="inout"/>

                    </animation>

		<animation type="WindowOpen" condition="!Window.IsVisible(LoginScreen) + !Window.IsVisible(Settings) + !Window.IsVisible(SkinSettings) + !Window.IsVisible(SettingsCategory) + !Window.IsVisible(10016) + !Window.IsVisible(10018) + !Window.IsVisible(10021) + !Window.IsVisible(10022) + !Window.IsVisible(10030) + !Window.IsVisible(10031) + !Window.IsVisible(10032)">
              <effect type="fade" start="0" end="100" time="300" tween="cubic" easing="inout"/>
              <effect type="zoom" start="120" end="100" time="400" tween="cubic" easing="out" center="auto"/>
                    </animation>
<animation type="WindowClose" condition="!Window.IsVisible(LoginScreen) + !Window.IsVisible(Settings) + !Window.IsVisible(SkinSettings) + !Window.IsVisible(SettingsCategory) + !Window.IsVisible(10016) + !Window.IsVisible(10018) + !Window.IsVisible(10021) + !Window.IsVisible(10022) + !Window.IsVisible(10030) + !Window.IsVisible(10031) + !Window.IsVisible(10032)">
              <effect type="fade" start="100" end="0" time="300" tween="cubic" easing="inout"/>
              <effect type="zoom" start="100" end="120" time="400" tween="cubic" easing="out"center="auto"/>
                    </animation>


					<left>50</left>
					<top>70</top>
					<width>1400</width>
					<height>33</height>
				<label>$PARAM[heading]</label>
					<font>Font57</font>
					<textcolor>DialogColor1</textcolor>
				</control>

				<control type="image">
		<animation type="WindowOpen">
              <effect type="fade" start="0" end="100" time="300" tween="cubic" easing="inout"/>

                    </animation>
<animation type="WindowClose">
              <effect type="fade" start="100" end="0" time="200" tween="cubic" easing="inout"/>

                    </animation>


					<left>0</left>
					<top>150</top>
					<width>1920</width>
					<height>2</height>
			<texture>color_white.png</texture>
			<colordiffuse>80FFFFFF</colordiffuse>
				</control>
			<control type="group">
				<visible>!Window.IsVisible(notification) + !Window.IsVisible(extendedprogressdialog) + !Window.IsVisible(volumebar) + !String.IsEqual(Window(10000).Property(isCaching),True)</visible>

				<animation type="WindowOpen" condition="Window.Previous(startup)">
					<effect type="fade" start="50" end="100" time="200" tween="cubic" easing="out"/>
				</animation>
				<animation type="Visible">
					<effect type="slide" start="120,0" end="0,0" time="200" />
					<effect type="fade" start="0" end="100" time="200" />
				</animation>
				<animation type="Hidden">
					<effect type="slide" end="120,0" time="200" />
					<effect type="fade" start="100" end="0" time="200" />
				</animation>
		<animation type="WindowOpen" condition="Window.IsVisible(LoginScreen) + Window.IsVisible(Settings) | Window.IsVisible(SkinSettings) | Window.IsVisible(SettingsCategory) | Window.IsVisible(10016) | Window.IsVisible(10018) | Window.IsVisible(10021) | Window.IsVisible(10022) | Window.IsVisible(10030) | Window.IsVisible(10031) | Window.IsVisible(10032)">
              <effect type="fade" start="0" end="100" time="300" tween="cubic" easing="inout"/>

                    </animation>
<animation type="WindowClose" condition="Window.IsVisible(LoginScreen) + Window.IsVisible(Settings) | Window.IsVisible(SkinSettings) | Window.IsVisible(SettingsCategory) | Window.IsVisible(10016) | Window.IsVisible(10018) | Window.IsVisible(10021) | Window.IsVisible(10022) | Window.IsVisible(10030) | Window.IsVisible(10031) | Window.IsVisible(10032)">
              <effect type="fade" start="100" end="0" time="300" tween="cubic" easing="inout"/>

                    </animation>

		<animation type="WindowOpen" condition="!Window.IsVisible(LoginScreen) + !Window.IsVisible(Settings) + !Window.IsVisible(SkinSettings) + !Window.IsVisible(SettingsCategory) + !Window.IsVisible(10016) + !Window.IsVisible(10018) + !Window.IsVisible(10021) + !Window.IsVisible(10022) + !Window.IsVisible(10030) + !Window.IsVisible(10031) + !Window.IsVisible(10032)">
              <effect type="fade" start="0" end="100" time="300" tween="cubic" easing="inout"/>
              <effect type="zoom" start="120" end="100" time="400" tween="cubic" easing="out" center="auto"/>
                    </animation>
<animation type="WindowClose" condition="!Window.IsVisible(LoginScreen) + !Window.IsVisible(Settings) + !Window.IsVisible(SkinSettings) + !Window.IsVisible(SettingsCategory) + !Window.IsVisible(10016) + !Window.IsVisible(10018) + !Window.IsVisible(10021) + !Window.IsVisible(10022) + !Window.IsVisible(10030) + !Window.IsVisible(10031) + !Window.IsVisible(10032)">
              <effect type="fade" start="100" end="0" time="300" tween="cubic" easing="inout"/>
              <effect type="zoom" start="100" end="120" time="400" tween="cubic" easing="out"center="auto"/>
                    </animation>
				<!-- Time -->
				<control type="label">
					<right>120</right>
					<top>95</top>
					<width>1400</width>
					<height>33</height>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.Time]</label>
					<font>Font33</font>
					<textcolor>DialogColor1</textcolor>
					<visible>!Player.HasMedia</visible>
				</control>
				<control type="label">
					<right>120</right>
					<top>93</top>
					<width>1400</width>
					<height>66</height>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.Date,[LIGHT],[/LIGHT]]</label>
					<font>Font33</font>
					<textcolor>DialogColor1</textcolor>
					<visible>Skin.HasSetting(Dateaboveclock) + !Player.HasMedia</visible>
				</control>

				<control type="group">
					<visible>Player.HasMedia</visible>

					<!-- Now Playing - Video -->
					<control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$INFO[VideoPlayer.ChannelNumber,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[VideoPlayer.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
					</control>
		  
					<control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
							 
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.ChannelNumberLabel,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [!String.IsEmpty(VideoPlayer.ChannelNumberLabel) + !String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<label>$INFO[VideoPlayer.EpisodeName]</label> 
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
				   
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$INFO[VideoPlayer.TVShowTitle]</label> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
						<pauseatend>5000</pauseatend> 
				  </control> 
							 
				  <control type="fadelabel"> 
						<right>170</right> 
						<top>93</top> 
						<width>1400</width> 
						<height>33</height> 
						<aligny>top</aligny> 
						<align>right</align> 
						<label>$VAR[SEplaying,[LIGHT],[/LIGHT] ]$INFO[Player.Title]</label> 
						<visible>Player.HasVideo + String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle) + [String.IsEmpty(VideoPlayer.ChannelNumberLabel) + String.IsEmpty(VideoPlayer.ChannelName)] + !Integer.IsGreater(Player.Duration,0)</visible> 
					</control> 

					<!-- Now Playing - Audio -->
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>[LIGHT]$INFO[MusicPlayer.Artist,,:  ][/LIGHT]$INFO[MusicPlayer.Album]</label>
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [!String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)] + Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>[LIGHT]$INFO[MusicPlayer.Artist][/LIGHT]</label>
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [!String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)] + Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>$INFO[MusicPlayer.Album]</label>
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)] + Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)] + Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>[LIGHT]$INFO[MusicPlayer.Artist,,:  ][/LIGHT]$INFO[MusicPlayer.Album]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [!String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)] + !Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>[LIGHT]$INFO[MusicPlayer.Artist][/LIGHT]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [!String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)] + !Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>$INFO[MusicPlayer.Album]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)] + !Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<visible>Player.HasAudio + String.IsEmpty(VideoPlayer.ChannelName) + [String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)] + !Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<!-- Now Playing - PVR Recording -->
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>$INFO[Player.Title]</label>
						<label>$INFO[VideoPlayer.ChannelNumber,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label>
						<label>$INFO[System.Time,[LIGHT]$LOCALIZE[142] [/LIGHT], / ]$INFO[Player.FinishTime,[LIGHT]$LOCALIZE[19081]: [/LIGHT]]</label>
						<visible>Player.HasAudio + !String.IsEmpty(VideoPlayer.ChannelName) + Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>
					
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>$INFO[Player.Title]</label>
						<label>$INFO[VideoPlayer.ChannelNumber,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label>
						<visible>Player.HasAudio + !String.IsEmpty(VideoPlayer.ChannelName) + !Integer.IsGreater(Player.Duration,0)</visible>
						<pauseatend>5000</pauseatend>
					</control>


					<!-- Now Playing - Progress -->
					<control type="label">
						<right>170</right>
						<top>127</top>
						<width>1400</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
						<font>Font33</font>
						<textcolor>DialogColor1</textcolor>
					</control>

					<!-- Play/Paused Image -->
					<control type="image">
						<right>110</right>
						<top>100</top>
						<width>60</width>
						<height>60</height>
						<texture colordiffuse="DialogColor1">osd/OSDPlayNF.png</texture>
						<visible>!Player.Paused</visible>
					</control>
					<control type="image">
						<right>110</right>
						<top>100</top>
						<width>60</width>
						<height>60</height>
						<texture colordiffuse="DialogColor1">osd/OSDPauseNF.png</texture>
						<visible>Player.Paused</visible>
					</control>

				</control>
			</control>
		</definition>
	</include>

	<!-- Window animation -->
	<include name="WindowFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	</include>

	<!-- Visible animation -->
	<include name="VisibleFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>

	<!-- Dialog animation -->
	<include name="DialogZoomAnimation">
		<animation type="WindowOpen">
			<effect type="zoom" start="70" end="100" center="auto" tween="sine" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose">
			<effect type="zoom" start="100" end="70" center="auto" time="300" />
			<effect type="fade" start="100" end="0" time="300" />
		</animation>
	</include>

	<!-- Options animation -->
	<include name="OptionsAnimation">
		<animation type="Visible">
			<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="Hidden">
			<effect type="zoom" start="100" end="70" center="auto" time="100" />
			<effect type="fade" start="100" end="0" time="100" />
		</animation>
	</include>

	<!-- Keyboard buttons -->
	<include name="KeyboardButtons">
		<width>84</width>
		<height>74</height>
		<font>Font48</font>
		<align>center</align>
		<textoffsetx>10</textoffsetx>
		<fadetime>200</fadetime>
		<texturefocus border="25,0,25,0">dialogs/KeyboardButton.png</texturefocus>
	</include>

	<!-- OSD Play buttons -->
	<include name="OSDPlayStopButtons">
		<control type="togglebutton" id="5">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDPauseNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDPauseNF.png</texturenofocus>
			<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding | Player.IsTempo</usealttexture>
			<alttexturefocus colordiffuse="DialogColor1">osd/OSDPlayNF.png</alttexturefocus>
			<alttexturenofocus colordiffuse="DialogColor2">osd/OSDPlayNF.png</alttexturenofocus>
			<onclick>PlayerControl(Play)</onclick>
		</control>
		<control type="button" id="6">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDStopNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>

	<!-- OSD Stop buttons -->
	<include name="OSDStopButton">
		<control type="button" id="5">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDStopNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>

	<!-- Item count -->
	<include name="ItemCount">
		<control type="grouplist">
			<right>120</right>
			<bottom>110</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>6</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>
			<control type="label">
				<!-- <top>3</top> -->
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[Container.NumItems]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$VAR[ContentType]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
			</control>
		</control>
	</include>

	<!-- Media Flags -->
	<include name="MediaFlags">
		<control type="grouplist">
			<left>120</left>
			<bottom>154</bottom>
			<width>480</width>
			<height>44</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>

			<!-- Video flags -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>DefaultMovies.png</texture>
				<visible>!String.IsEmpty(ListItem.VideoCodec) + !String.IsEmpty(ListItem.VideoResolution)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$VAR[VideoCodec,, ]$VAR[3DMode,, ]$VAR[VideoResolution,, ]$INFO[ListItem.VideoAspect,(,:1)]</label>
				<font>Font30</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.VideoCodec) + !String.IsEmpty(ListItem.VideoResolution)</visible>
			</control>
		</control>

		<control type="grouplist">
			<left>120</left>
			<bottom>120</bottom>
			<width>480</width>
			<height>44</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>

			<!-- Audio flags -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>DefaultAudio.png</texture>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$VAR[Audio]</label>
				<font>Font30</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
		</control>
		<control type="grouplist">
			<left>115</left>
			<bottom>66</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>
			<animation effect="slide" time="0" start="0,0" end="0,-44" condition="String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.VideoResolution) + String.IsEmpty(ListItem.AudioCodec)">Conditional</animation>

			<!-- Duration -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>pvr/Timer.png</texture>
				<visible>!String.IsEmpty(ListItem.Duration) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[ListItem.Duration, , ]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.Duration) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$LOCALIZE[12391]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.Duration) + !String.Contains(ListItem.Duration,:) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>  /  </label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.Duration) + !Container.Content(tvshows) + !Container.Content(seasons) + !ListItem.IsFolder + !String.IsEqual(ListItem.Size,0 B)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[ListItem.Size,$LOCALIZE[289]: ,]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!ListItem.IsFolder + !String.IsEqual(ListItem.Size,0 B)</visible>
			</control>
		</control>
	</include>

	<!-- Side menu animation -->
	<include name="SideMenuAnimation">
		<animation effect="slide" end="0,26" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,19)">Conditional</animation>
		<animation effect="slide" end="0,52" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,18)">Conditional</animation>
		<animation effect="slide" end="0,78" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,17)">Conditional</animation>
		<animation effect="slide" end="0,104" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,16)">Conditional</animation>
		<animation effect="slide" end="0,130" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,15)">Conditional</animation>
		<animation effect="slide" end="0,156" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,14)">Conditional</animation>
		<animation effect="slide" end="0,182" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,13)">Conditional</animation>
		<animation effect="slide" end="0,208" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,12)">Conditional</animation>
		<animation effect="slide" end="0,234" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,11)">Conditional</animation>
		<animation effect="slide" end="0,260" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,10)">Conditional</animation>
		<animation effect="slide" end="0,286" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,9)">Conditional</animation>
		<animation effect="slide" end="0,312" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,8)">Conditional</animation>
		<animation effect="slide" end="0,338" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,7)">Conditional</animation>
		<animation effect="slide" end="0,364" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,6)">Conditional</animation>
		<animation effect="slide" end="0,390" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,5)">Conditional</animation>
		<animation effect="slide" end="0,416" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,4)">Conditional</animation>
		<animation effect="slide" end="0,442" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,3)">Conditional</animation>
		<animation effect="slide" end="0,468" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,2)">Conditional</animation>
		<animation effect="slide" end="0,494" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,1)">Conditional</animation>

	</include>

	<include name="Indicators">
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>30</width>
				<height>$PARAM[height]</height>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>30</width>
					<height>16</height>
					<colordiffuse>TextColor2</colordiffuse>
					<texture colordiffuse="DialogColor2">up.png</texture>

					<visible>Container($PARAM[container]).HasPrevious</visible>

					<animation type="Visible">
						<effect type="Fade" start="0" end="100" time="200"/>
						<effect type="slide" start="0,10" end="0,0" time="200"/>
					</animation>
					<animation type="Hidden">
						<effect type="Fade" start="100" end="0" time="200"/>
						<effect type="slide" start="0,0" end="0,-10" time="200"/>
					</animation>

				</control>
				<control type="image">
					<left>0</left>
					<bottom>0</bottom>
					<width>30</width>
					<height>16</height>
					<texture colordiffuse="DialogColor2">down.png</texture>

					<visible>Container($PARAM[container]).HasNext</visible>

					<animation type="Visible">
						<effect type="Fade" start="0" end="100" time="200"/>
						<effect type="slide" start="0,-10" end="0,0" time="200"/>
					</animation>
					<animation type="Hidden">
						<effect type="Fade" start="100" end="0" time="200"/>
						<effect type="slide" start="0,0" end="0,10" time="200"/>
					</animation>
				</control>
			</control>
		</definition>
	</include>

	<include name="dialogButtonBackground">
		<definition>
			<control type="image">
				<left>-1000</left>
				<bottom>90</bottom>
				<width>3980</width>
				<height>86</height>
				<texture colordiffuse="TextColor1" border="2">common/Border.png</texture>
				<visible>ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<left>-1000</left>
				<bottom>90</bottom>
				<width>3980</width>
				<height>86</height>
				<texture colordiffuse="TextColor2" border="2">common/Border.png</texture>
				<visible>!ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<left>0</left>
				<bottom>90</bottom>
				<width>3980</width>
				<height>86</height>
				<visible>ControlGroup($PARAM[id]).HasFocus</visible>
				<texture colordiffuse="DarkenColor">dialogs/DialogTextBackground.png</texture>
				<include>VisibleFadeAnimation</include>
			</control>
		</definition>
	</include>

</includes>
